* mitchell-gravity-set                                             :TOC_5_gh:
  - [[#rant][Rant]]
  - [[#introduction][Introduction]]
  - [[#the-mitchell-gravity-set][The Mitchell Gravity Set]]
    - [[#what-is-it][What is it?]]
    - [[#history--origins][History & Origins]]
    - [[#other-implementations][Other Implementations]]
  - [[#gui-and-the-display][GUI and the Display]]
  - [[#debugging][Debugging]]

** Rant
   I was going to do the GUI part in Ruby,
   but decided not to. Since the main computation
   will be in Rust anyway, why not do ALL of it
   in Rust? Maybe I'll do a Ruby front-end later,
   but the users will have to install Rust anyway.

** Introduction
** The Mitchell Gravity Set
*** What is it?
*** History & Origins
*** Other Implementations
** GUI and the Display

   The GUI shall be superimposed on the
   OpenGL 'canvas', and shall be activated
   and deactived by keyboard keys, possibly
   the middle mouse button as well.

   Basically, the GUI shall address look like:

   |-------------------------+-----------------+--------|
   | Star 3 (all)            | ............... |        |
   | mass:______             | .             . | +      |
   | ............            | . S1          . |        |
   | Grav. Const __________  | .         S3  . | -      |
   |                         | .             . |        |
   | delta t ______________  | .    S2       . | tet    |
   |                         | .             . | cube   |
   | Resolution              | ............... | dodec  |
   | 2^3 4^3 8^3 ... 2048^3  |                 | sphere |
   |                         | # Stars _______ |        |
   | Escape Radius _______ r |                 |        |
   |                         |                 |        |
   |-------------------------+-----------------+--------|

   The Star box itself are OpenGL 3D-rendered "stars" that
   can be manipulated by the mouse. The pressing of
   the shift key will result in the dragging of a Star
   to a different location in the 2D plane it's in.

** Debugging
   #+begin_src bash
   RUST_BACKTRACE=1 cargo run
   #+end_src
